import{_ as o,c as t,o as i,ae as a}from"./chunks/framework.Dq8kYo8j.js";const p=JSON.parse('{"title":"Task For White Line Sensors, Motor wheels","description":"","frontmatter":{},"headers":[],"relativePath":"challenges/white.md","filePath":"challenges/white.md"}'),l={name:"challenges/white.md"};function n(r,e,s,h,d,c){return i(),t("div",null,e[0]||(e[0]=[a('<h1 id="task-for-white-line-sensors-motor-wheels" tabindex="-1">Task For White Line Sensors, Motor wheels <a class="header-anchor" href="#task-for-white-line-sensors-motor-wheels" aria-label="Permalink to &quot;Task For White Line Sensors, Motor wheels&quot;">​</a></h1><h2 id="activities-followed" tabindex="-1">Activities Followed <a class="header-anchor" href="#activities-followed" aria-label="Permalink to &quot;Activities Followed&quot;">​</a></h2><ul><li>Fetch the Readings from White line Sensor</li><li>Motion Control </li><li>Display Elements in OLED display</li><li>Change Color In RGB LEDs </li></ul><h2 id="task" tabindex="-1">Task <a class="header-anchor" href="#task" aria-label="Permalink to &quot;Task&quot;">​</a></h2><h3 id="line-following-alphabot" tabindex="-1">Line Following Alphabot <a class="header-anchor" href="#line-following-alphabot" aria-label="Permalink to &quot;Line Following Alphabot&quot;">​</a></h3><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h3><h2 id="functions-to-do" tabindex="-1">Functions To Do <a class="header-anchor" href="#functions-to-do" aria-label="Permalink to &quot;Functions To Do&quot;">​</a></h2><ol><li><strong>Sensor &amp; Movement Logic</strong><ul><li>Use 5 IR sensors to read the white line position and store values in an array.</li><li>Calibrate sensors at startup for accurate detection.</li><li>Continuously read sensor values and round them for stability.</li><li>Calculate the line position using a weighted sum for proportional control.</li><li>Implement PID control (proportional, integral, derivative) to follow the line smoothly.</li><li>Adjust motor speeds based on PID output to keep the robot centered on the line.</li></ul></li><li><strong>Motor Control</strong><ul><li>Use PWM to control left and right motor speeds independently.</li><li>Implement functions for turning left, right, and making 180-degree turns using motor direction and speed control.</li><li>Stop motors when needed for precise maneuvers or at the end of the line.</li></ul></li><li><strong>Feedback &amp; Debugging</strong><ul><li>Print sensor values and calculated positions to the serial monitor for debugging and calibration.</li></ul></li></ol><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-label="Permalink to &quot;Solution&quot;">​</a></h2><p><a href="https://github.com/deepaavudiappan/AlphabotV2/tree/00155f95efc2b72ecd84d1d14afa7b96079c1fd0/Alphabot%20V2%20-%20Ar/Activities/whitelinesensor/whitelinesensor" target="_blank">White_line_tracking</a></p>',10)]))}const f=o(l,[["render",n]]);export{p as __pageData,f as default};
